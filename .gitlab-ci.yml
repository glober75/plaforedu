---
stages:
  - build
  - code-quality
  - compliance
  - deploy

variables:
  ROLE_KEY: AWS_ACCESS_KEY_ID_$CI_ENVIRONMENT_NAME
  ROLE_SECRET: AWS_SECRET_ACCESS_KEY_$CI_ENVIRONMENT_NAME
  PROJECT_NAMESPACE: plaforedu

include:
  - project: ${CI_TEMPLATES_HOME}/frontend
    file:
      - code-quality.yml
      - compliance.yml

build:
  environment:
    name: dev
  stage: build
  image: gitlab.rnp.br:5005/ci-cd/docker-base-images/builder-images/node:16-40393
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules/
  script:
    - echo "Preparing Frontend Package"
    - export AWS_ACCESS_KEY_ID="${!ROLE_KEY}"
    - export AWS_SECRET_ACCESS_KEY="${!ROLE_SECRET}"
    - echo VITE_API_URL="${API_URL}" > .env
    - echo VITE_DOMAIN_URL="${FRONTEND_DOMAIN}" >> .env
    - npm install --cache .npm --prefer-offline --no-audit
    - export NODE_ENV='production'
    - CI=false npm run build
    - echo "Frontend Build Package Successful"
  artifacts:
    paths:
      - ./dist
  only:
    - develop

deploy:
  environment:
    name: dev
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - echo " Starting Deploy"
    - export AWS_ACCESS_KEY_ID="${!ROLE_KEY}"
    - export AWS_SECRET_ACCESS_KEY="${!ROLE_SECRET}"
    - aws s3 rm s3://$AWS_BUCKET --recursive
    - aws s3 cp dist/ s3://$AWS_BUCKET --recursive --include "*"
    - export AWS_DISTRIBUTION=$(aws ssm get-parameter --name "/$PROJECT_NAMESPACE/$CI_ENVIRONMENT_NAME/frontend/CLOUDFRONT_ID" --output text --query Parameter.Value --region sa-east-1)
    - aws cloudfront create-invalidation --distribution-id $AWS_DISTRIBUTION --paths "/*"
    - echo "Frontend Deploy Package Successful"
  only:
    - develop

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH == "htx"
    - if: $CI_COMMIT_BRANCH =~ /^release\/[0-9]+(?:.[0-9]+)+$/
